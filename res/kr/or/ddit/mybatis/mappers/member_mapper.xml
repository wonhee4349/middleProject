<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 myBatis에서 처리할 SQL문을 작성하는 문서입니다. -->
<!--mybatis-config 추가하기 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mapper namespace=> 다른 문서랑 중복 안되게 하기 -->
<mapper namespace="member">

	<sql id="dynamicCondition">
	   <where>
	       <if test="sword != null and sword neq '' ">
	        users_name like  '%'||#{sword}||'%'
	       </if>
	   </where>
	</sql>

	<!--회원가입  -->
	<!-- <insert id="insertMember" parameterType="MemVo">	
		insert into users( users_id, users_pw, users_name,users_bir, users_gen, users_tel, users_zip, users_addr1, users_addr2, users_mail)
		values(#{users_id},#{users_pw},#{users_name},#{users_bir},#{users_gen},#{users_tel},#{users_zip},#{users_addr1},#{users_addr2},#{users_mail})
	</insert> -->
 	<insert id="insertMember" parameterType="MemVo">
    
    <selectKey keyProperty="users_no" resultType="String" order="BEFORE">
        select 'U_23_' || LPAD(SEQ_USERS.NEXTVAL, 4, '0') from dual
    </selectKey>
    
   
    insert into users (
        users_no, users_id, users_pw, users_name, users_bir, users_tel,
        users_zip, users_mail, users_addr1, users_addr2, users_gen
    )
    values (
        #{users_no}, #{users_id}, #{users_pw}, #{users_name}, #{users_bir}, #{users_tel},
        #{users_zip}, #{users_mail}, #{users_addr1}, #{users_addr2}, #{users_gen}
    )
	</insert>
	 
	<!--아이디 중복  -->
	<select id="selectById" resultType="String" parameterType="String">
		select users_id from users where users_id= #{users_id} 
	</select>
	
	<!--로그인  -->
	<select id="loginMem" resultType="MemVo" parameterType="MemVo">
		select * from users where users_id=#{users_id} and users_pw=#{users_pw}
	</select>	
	
	<!--아이디 찾기  -->
	<select id="findIdMem" resultType="MemVo" parameterType="MemVo">
		select * from users where users_name=#{users_name} and users_mail=#{users_mail}
	</select>	
	
	<!--비밀번호 찾기  -->  
	<select id="findPwMem" resultType="MemVo" parameterType="MemVo" >
		select * from users where users_id=#{users_id} and users_mail=#{users_mail}
	</select>
	
	<!--비밀번호 랜덤 업데이트  -->
	<update id="randomPw" parameterType="MemVo">
	
		update users set users_pw=#{users_pw} where users_id=#{users_id}
	
	</update>
	
	<select id="getListCount" resultType="int" parameterType="Map">
		select count(*) from users <include refid="dynamicCondition"></include>
	</select>
		
	<select id="selectByPage" resultType="MemVo" parameterType="Map">
		 select A.* from (
		     select rownum as rnum, B.*  from (
		         select * from users
		         <include refid="dynamicCondition"/>
		         order by users_no asc) B
		         <![CDATA[
		     where rownum <= #{endIndex} ) A 
	 	 where A.rnum >=#{startIndex}
	 	]]> 
	</select>
	
	<select id="selectByNo" resultType="MemVo" parameterType="String">
		select USERS_NO, USERS_ID, USERS_PW, USERS_NAME, TO_CHAR(USERS_BIR, 'YYYY/MM/DD') as users_bir, USERS_TEL, USERS_ZIP,
 				USERS_MAIL, USERS_ADDR1, USERS_ADDR2, USERS_GEN  from users where users_no = #{data}
	</select>
	
	<delete id="deleteUsers" parameterType="String">
		delete users where users_no = #{data}
	</delete>
	





	<!-- Map을 파라미터로 받아서 처리할 때의 변수명 역할을 Map의 key값으로 한다 파라미터로 가져온 값을 컬럼명 등의 자리에서 
		사용할 경우에는 달러$ 기호를 사용해서 나타낸다. (예: ${변수명} 또는 ${key값} ) ( Key값 정보==> 회원 ID(memid), 
		수정할 컬럼명(field), 수정할 데이터(data) ) -->





</mapper>